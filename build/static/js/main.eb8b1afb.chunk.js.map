{"version":3,"sources":["CryptoContext.js","components/Header.js","config/api.js","components/Banner/Carousel.js","components/Banner/Banner.js","components/Cointable.js","Pages/Homepage.js","components/SelectButton.js","config/data.js","components/CoinInfo.js","components/CoinsTable.js","Pages/CoinPage.js","App.js","index.js"],"names":["Crypto","createContext","CryptoContext","children","useState","currency","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","useStyles","makeStyles","title","flex","color","fontFamily","fontWeigth","cursor","Header","classes","history","useHistory","console","log","darkTheme","createTheme","palette","primary","main","type","ThemeProvider","theme","AppBar","position","Container","Toolbar","Typography","onClick","push","className","variant","Select","style","width","height","marginRight","onChange","e","target","MenuItem","CoinList","SingleCoin","id","HistoricalChart","days","TrendingCoins","carousel","display","alignItems","carouselItem","flexDirection","textTransform","Carousel","trending","setTrending","fetchTrendingCoins","axios","get","data","items","map","coin","x","profit","price_change_percentage_24h","to","src","image","alt","name","marginBottom","fontWeight","toFixed","fontSize","current_price","toString","replace","ClassName","mouseTracking","infinite","autoPlayInterval","animationDuration","disableDotsControls","responsive","autoPlay","banner","backgroundImage","bannerContent","paddingTop","justifyContent","tagline","textAlign","Banner","numberWithCommas","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","row","backgroundColor","pagination","fetchCoins","handleSearch","filter","toLowerCase","includes","margin","TextField","label","TableContainer","component","Paper","LinearProgress","Table","TableHead","TableRow","head","TableCell","align","TableBody","slice","scope","gap","market_cap","Pagination","count","length","padding","ul","_","window","scroll","Homepage","SelectButton","selected","selectbutton","border","borderRadius","paddingLeft","paddingRight","chartDays","CoinInfo","historicData","setHistoricData","setDays","flag","setflag","container","marginTop","breakpoints","down","fetchHistoricData","prices","CircularProgress","size","thickness","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","CoinPage","useParams","setCoin","fetchCoin","sidebar","heading","description","paddingBottom","marketData","alignSelf","large","ReactHtmlParser","en","split","market_cap_rank","market_data","App","minHeight","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8b1afb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { children } from 'react'\r\nimport { createContext, useContext, useState, useEffect } from 'react'\r\nconst Crypto = createContext()\r\nconst CryptoContext = ({ children }) => {\r\n    const [currency, setCurrency] = useState(\"INR\");\r\n    const [symbol, setSymbol] = useState(\"₹\");\r\n\r\n    useEffect(() => {\r\n        if (currency == \"INR\") setSymbol(\"₹\");\r\n        else if (currency == \"USD\") setSymbol(\"$\");\r\n    }, [currency]);\r\n\r\n    return (\r\n        <Crypto.Provider value={{ currency, symbol, setCurrency }}>{children}</Crypto.Provider>\r\n    )\r\n}\r\n\r\nexport default CryptoContext;\r\n\r\n\r\nexport const CryptoState = () => {\r\n    return useContext(Crypto);\r\n};","import React from 'react'\r\nimport { AppBar, Container, Toolbar, Typography, Select, MenuItem, makeStyles, createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CryptoState } from '../CryptoContext';\r\nconst useStyles = makeStyles(() => ({\r\n    title: {\r\n        flex: 1,\r\n        color: \"gold\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeigth: \"bold\",\r\n        cursor: \"pointer\",\r\n    }\r\n}));\r\nconst Header = () => {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { currency, setCurrency } = CryptoState();\r\n    console.log(currency);\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <AppBar color='transparent' position='static'>\r\n                <Container>\r\n                    <Toolbar>\r\n                        <Typography\r\n                            onClick={() => history.push(\"/\")}\r\n                            className={classes.title}\r\n                            variant='h6'>\r\n                            Crypto Tracker\r\n                        </Typography>\r\n                        <Select variant=\"outlined\"\r\n                            style={{\r\n                                width: 100,\r\n                                height: 40,\r\n                                marginRight: 15,\r\n                            }}\r\n                            value={currency}\r\n                            onChange={(e) => setCurrency(e.target.value)}\r\n                        >\r\n                            <MenuItem value={\"USD\"}>USD</MenuItem>\r\n                            <MenuItem value={\"INR\"}>INR</MenuItem>\r\n                        </Select>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const CoinList = (currency) =>\r\n    `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n    `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n    `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n    `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import { makeStyles } from '@material-ui/core'\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { TrendingCoins } from '../../config/api';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport { useState, useEffect } from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    carousel: {\r\n        height: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    carouselItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        textTransform: \"uppercase\",\r\n        color: \"white\",\r\n    },\r\n}));\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Carousel = () => {\r\n    const [trending, setTrending] = useState([]);\r\n    const classes = useStyles();\r\n    const { currency, symbol } = CryptoState();\r\n    const fetchTrendingCoins = async () => {\r\n        const { data } = await axios.get(TrendingCoins(currency));\r\n        setTrending(data);\r\n    };\r\n    console.log(trending);\r\n    useEffect(() => {\r\n        fetchTrendingCoins();\r\n    }, [currency]);\r\n\r\n    const items = trending.map((coin) => {\r\n        let profit = coin.price_change_percentage_24h >= 0;\r\n        return (\r\n            <Link className={classes.carouselItem} to={`/coins/${coin.id}`}>\r\n                <img\r\n                    src={coin?.image}\r\n                    alt={coin.name}\r\n                    height=\"80\"\r\n                    style={{ marginBottom: 10 }}\r\n                />\r\n                <span>\r\n                    {coin?.symbol}\r\n                    &nbsp;\r\n                    <span style={{\r\n                        color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                        fontWeight: 500,\r\n                    }}>\r\n                        {profit && \"+\"} {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n                    </span>\r\n                </span>\r\n                <span style={{ fontSize: 22, fontWeight: 500 }}>\r\n                    {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n                </span>\r\n            </Link>\r\n        );\r\n    });\r\n    const responsive = {\r\n        0: { items: 2 },\r\n        512: { items: 4 },\r\n    };\r\n    return (\r\n        <div ClassName={classes.Carousel}>\r\n            <AliceCarousel\r\n                mouseTracking\r\n                infinite\r\n                autoPlayInterval={1000}\r\n                animationDuration={1500}\r\n                disableDotsControls\r\n                responsive={responsive}\r\n                autoPlay\r\n                items={items}\r\n            />\r\n        </div>)\r\n};\r\n\r\nexport default Carousel\r\n\r\n\r\n","import { Container, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Carousel from './Carousel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    banner: {\r\n        backgroundImage: \"url(./banner2.jpg)\",\r\n    },\r\n    bannerContent: {\r\n        height: 400,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        paddingTop: 25,\r\n        justifyContent: \"space-around\",\r\n    },\r\n    tagline: {\r\n        display: \"flex\",\r\n        height: \"40%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\nconst Banner = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.banner}>\r\n            <Container className={classes.bannerContent}>\r\n                <div className={classes.tagline}>\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        style={\r\n                            {\r\n                                fontWeight: \"bold\",\r\n                                marginBottom: 15,\r\n                                fontFamily: \"Montserrat\",\r\n                                color: \"gold\",\r\n                            }\r\n                        }\r\n                    >\r\n                        Crypto Tracker\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        style={{\r\n                            color: \"darkgray\",\r\n                            textTransform: \"capitalize\",\r\n                            fontFamily: \"Monserrat\"\r\n                        }}>\r\n                        Get all Information about your favorite Crypto Currency\r\n                    </Typography>\r\n                </div>\r\n                <Carousel />\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n    Container,\r\n    createTheme,\r\n    TableCell,\r\n    LinearProgress,\r\n    ThemeProvider,\r\n    Typography,\r\n    TextField,\r\n    TableBody,\r\n    TableRow,\r\n    TableHead,\r\n    TableContainer,\r\n    Table,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default function CoinsTable() {\r\n    const [coins, setCoins] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n\r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const useStyles = makeStyles({\r\n        row: {\r\n            backgroundColor: \"#16171a\",\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#131111\",\r\n            },\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        pagination: {\r\n            \"& .MuiPaginationItem-root\": {\r\n                color: \"gold\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    });\r\n\r\n    const fetchCoins = async () => {\r\n        setLoading(true);\r\n        const { data } = await axios.get(CoinList(currency));\r\n        console.log(data);\r\n\r\n        setCoins(data);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCoins();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currency]);\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter(\r\n            (coin) =>\r\n                coin.name.toLowerCase().includes(search) ||\r\n                coin.symbol.toLowerCase().includes(search)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    style={{ margin: 18, fontFamily: \"Montserrat\" }}\r\n                >\r\n                    Cryptocurrency Prices by Market Cap\r\n                </Typography>\r\n                <TextField\r\n                    label=\"Search For a Crypto Currency..\"\r\n                    variant=\"outlined\"\r\n                    style={{ marginBottom: 20, width: \"100%\" }}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n                <TableContainer component={Paper}>\r\n                    {loading ? (\r\n                        <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n                    ) : (\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                                <TableRow>\r\n                                    {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                                        <TableCell\r\n                                            style={{\r\n                                                color: \"black\",\r\n                                                fontWeight: \"700\",\r\n                                                fontFamily: \"Montserrat\",\r\n                                            }}\r\n                                            key={head}\r\n                                            align={head === \"Coin\" ? \"\" : \"right\"}\r\n                                        >\r\n                                            {head}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {handleSearch()\r\n                                    .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                                    .map((row) => {\r\n                                        const profit = row.price_change_percentage_24h > 0;\r\n                                        return (\r\n                                            <TableRow\r\n                                                onClick={() => history.push(`/coins/${row.id}`)}\r\n                                                className={classes.row}\r\n                                                key={row.name}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    style={{\r\n                                                        display: \"flex\",\r\n                                                        gap: 15,\r\n                                                    }}\r\n                                                >\r\n                                                    <img\r\n                                                        src={row?.image}\r\n                                                        alt={row.name}\r\n                                                        height=\"50\"\r\n                                                        style={{ marginBottom: 10 }}\r\n                                                    />\r\n                                                    <div\r\n                                                        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                textTransform: \"uppercase\",\r\n                                                                fontSize: 22,\r\n                                                            }}\r\n                                                        >\r\n                                                            {row.symbol}\r\n                                                        </span>\r\n                                                        <span style={{ color: \"darkgrey\" }}>\r\n                                                            {row.name}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(row.current_price.toFixed(2))}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    align=\"right\"\r\n                                                    style={{\r\n                                                        color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                                                        fontWeight: 500,\r\n                                                    }}\r\n                                                >\r\n                                                    {profit && \"+\"}\r\n                                                    {row.price_change_percentage_24h.toFixed(2)}%\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(\r\n                                                        row.market_cap.toString().slice(0, -6)\r\n                                                    )}\r\n                                                    M\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                </TableContainer>\r\n\r\n                {/* Comes from @material-ui/lab */}\r\n                <Pagination\r\n                    count={(handleSearch()?.length / 10).toFixed(0)}\r\n                    style={{\r\n                        padding: 20,\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    classes={{ ul: classes.pagination }}\r\n                    onChange={(_, value) => {\r\n                        setPage(value);\r\n                        window.scroll(0, 450);\r\n                    }}\r\n                />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from 'react'\r\nimport Banner from '../components/Banner/Banner'\r\nimport Cointable from '../components/Cointable'\r\n\r\nconst Homepage = () => {\r\n    return <>\r\n        <Banner />\r\n        <Cointable />\r\n    </>\r\n}\r\n\r\nexport default Homepage\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst SelectButton = ({ children, selected, onClick }) => {\r\n    const useStyles = makeStyles({\r\n        selectbutton: {\r\n            border: \"1px solid gold\",\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            fontFamily: \"Montserrat\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: selected ? \"gold\" : \"\",\r\n            color: selected ? \"black\" : \"\",\r\n            fontWeight: selected ? 700 : 500,\r\n            \"&:hover\": {\r\n                backgroundColor: \"gold\",\r\n                color: \"black\",\r\n            },\r\n            width: \"22%\",\r\n            //   margin: 5,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <span onClick={onClick} className={classes.selectbutton}>\r\n            {children}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default SelectButton;","export const chartDays = [\r\n    {\r\n        label: \"24 Hours\",\r\n        value: 1,\r\n    },\r\n    {\r\n        label: \"30 Days\",\r\n        value: 30,\r\n    },\r\n    {\r\n        label: \"3 Months\",\r\n        value: 90,\r\n    },\r\n    {\r\n        label: \"1 Year\",\r\n        value: 365,\r\n    },\r\n];","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HistoricalChart } from \"../config/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n    CircularProgress,\r\n    createTheme,\r\n    makeStyles,\r\n    ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport SelectButton from \"./SelectButton\";\r\nimport { chartDays } from \"../config/data\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n    const [historicData, setHistoricData] = useState();\r\n    const [days, setDays] = useState(1);\r\n    const { currency } = CryptoState();\r\n    const [flag, setflag] = useState(false);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n            width: \"75%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: 25,\r\n            padding: 40,\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                width: \"100%\",\r\n                marginTop: 0,\r\n                padding: 20,\r\n                paddingTop: 0,\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const fetchHistoricData = async () => {\r\n        const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\r\n        setflag(true);\r\n        setHistoricData(data.prices);\r\n    };\r\n\r\n    console.log(coin);\r\n\r\n    useEffect(() => {\r\n        fetchHistoricData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [days]);\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <div className={classes.container}>\r\n                {!historicData | flag === false ? (\r\n                    <CircularProgress\r\n                        style={{ color: \"gold\" }}\r\n                        size={250}\r\n                        thickness={1}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <Line\r\n                            data={{\r\n                                labels: historicData.map((coin) => {\r\n                                    let date = new Date(coin[0]);\r\n                                    let time =\r\n                                        date.getHours() > 12\r\n                                            ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                                            : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                                    return days === 1 ? time : date.toLocaleDateString();\r\n                                }),\r\n\r\n                                datasets: [\r\n                                    {\r\n                                        data: historicData.map((coin) => coin[1]),\r\n                                        label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                                        borderColor: \"#EEBC1D\",\r\n                                    },\r\n                                ],\r\n                            }}\r\n                            options={{\r\n                                elements: {\r\n                                    point: {\r\n                                        radius: 1,\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                marginTop: 20,\r\n                                justifyContent: \"space-around\",\r\n                                width: \"100%\",\r\n                            }}\r\n                        >\r\n                            {chartDays.map((day) => (\r\n                                <SelectButton\r\n                                    key={day.value}\r\n                                    onClick={() => {\r\n                                        setDays(day.value);\r\n                                        setflag(false);\r\n                                    }}\r\n                                    selected={day.value === days}\r\n                                >\r\n                                    {day.label}\r\n                                </SelectButton>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default CoinInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n    Container,\r\n    createTheme,\r\n    TableCell,\r\n    LinearProgress,\r\n    ThemeProvider,\r\n    Typography,\r\n    TextField,\r\n    TableBody,\r\n    TableRow,\r\n    TableHead,\r\n    TableContainer,\r\n    Table,\r\n    Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default function CoinsTable() {\r\n    const [coins, setCoins] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n\r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const useStyles = makeStyles({\r\n        row: {\r\n            backgroundColor: \"#16171a\",\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#131111\",\r\n            },\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        pagination: {\r\n            \"& .MuiPaginationItem-root\": {\r\n                color: \"gold\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    });\r\n\r\n    const fetchCoins = async () => {\r\n        setLoading(true);\r\n        const { data } = await axios.get(CoinList(currency));\r\n        console.log(data);\r\n\r\n        setCoins(data);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCoins();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currency]);\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter(\r\n            (coin) =>\r\n                coin.name.toLowerCase().includes(search) ||\r\n                coin.symbol.toLowerCase().includes(search)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    style={{ margin: 18, fontFamily: \"Montserrat\" }}\r\n                >\r\n                    Cryptocurrency Prices by Market Cap\r\n                </Typography>\r\n                <TextField\r\n                    label=\"Search For a Crypto Currency..\"\r\n                    variant=\"outlined\"\r\n                    style={{ marginBottom: 20, width: \"100%\" }}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n                <TableContainer component={Paper}>\r\n                    {loading ? (\r\n                        <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n                    ) : (\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                                <TableRow>\r\n                                    {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                                        <TableCell\r\n                                            style={{\r\n                                                color: \"black\",\r\n                                                fontWeight: \"700\",\r\n                                                fontFamily: \"Montserrat\",\r\n                                            }}\r\n                                            key={head}\r\n                                            align={head === \"Coin\" ? \"\" : \"right\"}\r\n                                        >\r\n                                            {head}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {handleSearch()\r\n                                    .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                                    .map((row) => {\r\n                                        const profit = row.price_change_percentage_24h > 0;\r\n                                        return (\r\n                                            <TableRow\r\n                                                onClick={() => history.push(`/coins/${row.id}`)}\r\n                                                className={classes.row}\r\n                                                key={row.name}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    style={{\r\n                                                        display: \"flex\",\r\n                                                        gap: 15,\r\n                                                    }}\r\n                                                >\r\n                                                    <img\r\n                                                        src={row?.image}\r\n                                                        alt={row.name}\r\n                                                        height=\"50\"\r\n                                                        style={{ marginBottom: 10 }}\r\n                                                    />\r\n                                                    <div\r\n                                                        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                textTransform: \"uppercase\",\r\n                                                                fontSize: 22,\r\n                                                            }}\r\n                                                        >\r\n                                                            {row.symbol}\r\n                                                        </span>\r\n                                                        <span style={{ color: \"darkgrey\" }}>\r\n                                                            {row.name}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(row.current_price.toFixed(2))}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    align=\"right\"\r\n                                                    style={{\r\n                                                        color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                                                        fontWeight: 500,\r\n                                                    }}\r\n                                                >\r\n                                                    {profit && \"+\"}\r\n                                                    {row.price_change_percentage_24h.toFixed(2)}%\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(\r\n                                                        row.market_cap.toString().slice(0, -6)\r\n                                                    )}\r\n                                                    M\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                </TableContainer>\r\n\r\n                {/* Comes from @material-ui/lab */}\r\n                <Pagination\r\n                    count={(handleSearch()?.length / 10).toFixed(0)}\r\n                    style={{\r\n                        padding: 20,\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    classes={{ ul: classes.pagination }}\r\n                    onChange={(_, value) => {\r\n                        setPage(value);\r\n                        window.scroll(0, 450);\r\n                    }}\r\n                />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","// import React from 'react'\r\n// import { useParams } from \"react-router-dom\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { CryptoState } from \"../CryptoContext\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import axios from \"axios\";\r\n// import { SingleCoin } from '../config/api';\r\n// import CoinInfo from '../components/CoinInfo';\r\n\r\n// const CoinPage = () => {\r\n\r\n//     const { id } = useParams();\r\n//     const [coin, setCoin] = useState();\r\n//     const [currency, symbol] = CryptoState();\r\n\r\n//     const fetchCoin = async () => {\r\n//         const { data } = await axios.get(SingleCoin(id));\r\n//         setCoin(data);\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchCoin();\r\n//     }, []);\r\n\r\n//     const useStyles = makeStyles((theme) => ({\r\n//         container: {\r\n//             display: \"flex\",\r\n//             [theme.breakpoints.down(\"md\")]: {\r\n//                 flexDirection: \"column\",\r\n//                 alignItems: \"center\",\r\n//             },\r\n//         },\r\n//         sidebar: {\r\n//             width: \"30%\",\r\n//             [theme.breakpoints.down(\"md\")]: {\r\n//                 width: \"100%\",\r\n//             },\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//             marginTop: 25,\r\n//             borderRight: \"2px solid grey\",\r\n//         },\r\n//         heading: {\r\n//             fontWeight: \"bold\",\r\n//             marginBottom: 20,\r\n//             fontFamily: \"Montserrat\",\r\n//         },\r\n//         description: {\r\n//             width: \"100%\",\r\n//             fontFamily: \"Montserrat\",\r\n//             padding: 25,\r\n//             paddingBottom: 15,\r\n//             paddingTop: 0,\r\n//             textAlign: \"justify\",\r\n//         },\r\n//         marketData: {\r\n//             alignSelf: \"start\",\r\n//             padding: 25,\r\n//             paddingTop: 10,\r\n//             width: \"100%\",\r\n//             [theme.breakpoints.down(\"md\")]: {\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"space-around\",\r\n//             },\r\n//             [theme.breakpoints.down(\"sm\")]: {\r\n//                 flexDirection: \"column\",\r\n//                 alignItems: \"center\",\r\n//             },\r\n//             [theme.breakpoints.down(\"xs\")]: {\r\n//                 alignItems: \"start\",\r\n//             },\r\n//         },\r\n//     }));\r\n\r\n//     return (\r\n//         <div className={classes.container}>\r\n//             <div className={classes.sidebar}></div>\r\n//             <CoinInfo coin={coin} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default CoinPage\r\n\r\n\r\nimport { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport CoinInfo from \"../components/CoinInfo\";\r\nimport { SingleCoin } from \"../config/api\";\r\nimport { numberWithCommas } from \"../components/CoinsTable\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst CoinPage = () => {\r\n    const { id } = useParams();\r\n    const [coin, setCoin] = useState();\r\n\r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const fetchCoin = async () => {\r\n        const { data } = await axios.get(SingleCoin(id));\r\n\r\n        setCoin(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCoin();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        sidebar: {\r\n            width: \"30%\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                width: \"100%\",\r\n            },\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            marginTop: 25,\r\n            borderRight: \"2px solid grey\",\r\n        },\r\n        heading: {\r\n            fontWeight: \"bold\",\r\n            marginBottom: 20,\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        description: {\r\n            width: \"100%\",\r\n            fontFamily: \"Montserrat\",\r\n            padding: 25,\r\n            paddingBottom: 15,\r\n            paddingTop: 0,\r\n            textAlign: \"justify\",\r\n        },\r\n        marketData: {\r\n            alignSelf: \"start\",\r\n            padding: 25,\r\n            paddingTop: 10,\r\n            width: \"100%\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                alignItems: \"start\",\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.sidebar}>\r\n                <img\r\n                    src={coin?.image.large}\r\n                    alt={coin?.name}\r\n                    height=\"200\"\r\n                    style={{ marginBottom: 20 }}\r\n                />\r\n                <Typography variant=\"h3\" className={classes.heading}>\r\n                    {coin?.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.description}>\r\n                    {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n                </Typography>\r\n                <div className={classes.marketData}>\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Rank:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            style={{\r\n                                fontFamily: \"Montserrat\",\r\n                            }}\r\n                        >\r\n                            {numberWithCommas(coin?.market_cap_rank)}\r\n                        </Typography>\r\n                    </span>\r\n\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Current Price:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            style={{\r\n                                fontFamily: \"Montserrat\",\r\n                            }}\r\n                        >\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(\r\n                                coin?.market_data.current_price[currency.toLowerCase()]\r\n                            )}\r\n                        </Typography>\r\n                    </span>\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Market Cap:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            style={{\r\n                                fontFamily: \"Montserrat\",\r\n                            }}\r\n                        >\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(\r\n                                coin?.market_data.market_cap[currency.toLowerCase()]\r\n                                    .toString()\r\n                                    .slice(0, -6)\r\n                            )}\r\n                            M\r\n                        </Typography>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <CoinInfo coin={coin} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CoinPage;","import './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Header from './components/Header';\nimport Homepage from './Pages/Homepage';\nimport CoinPage from './Pages/CoinPage';\nimport React, { Component } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  App: {\n    backgroundColor: \"#14161a\",\n    color: \"white\",\n    minHeight: \"100vh\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n      <div className={classes.App}>\n        <Header />\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/coins/:id\" exact component={CoinPage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CryptoContext from './CryptoContext';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CryptoContext>\n      <App />\n    </CryptoContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}